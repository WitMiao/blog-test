{"title":"获取质数算法：埃拉托斯特尼筛法","uid":"35812bef2e366533a5768bf0e35d85d9","slug":"获取质数算法：埃拉托斯特尼筛法","date":"2020-08-11T07:00:00.000Z","updated":"2022-08-14T13:31:01.575Z","comments":true,"path":"api/articles/获取质数算法：埃拉托斯特尼筛法.json","keywords":null,"cover":[],"content":"<h2 id=\"埃拉托斯特尼筛法\"><a href=\"#埃拉托斯特尼筛法\" class=\"headerlink\" title=\"埃拉托斯特尼筛法\"></a>埃拉托斯特尼筛法</h2><p>本算法的核心思想是：给出要筛选数值的范围 n，找出 √𝑛 以内的素数 p1, p2…, p𝑘。先用 2 去筛，即把 2 留下，把 2 的倍数剔除掉；再用下一个素数，也就是 3 筛，把 3 留下，把 3 的倍数剔除掉；接下去用下一个素数 5 筛，把 5 留下，把 5 的倍数剔除掉；不断重复下去……</p>\n<p>如下图所示：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/WitMiao/blogPic/img/Sieve_of_Eratosthenes_animation.gif\"></p>\n<p>下面是本算法的实现代码：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">primesList</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> signs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>signs<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                signs<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token function\">primesList</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"count: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>时间复杂度：O(n * loglog n)</p>\n</li>\n<li><p>空间复杂度：O(n)</p>\n</li>\n</ul>\n<p>参考资料：</p>\n<ul>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95\">埃拉托斯特尼筛法 — 维基百科</a></li>\n</ul>\n","feature":true,"text":"埃拉托斯特尼筛法本算法的核心思想是：给出要筛选数值的范围 n，找出 √𝑛 以内的素数 p1, p2…, p𝑘。先用 2 去筛，即把 2 留下，把 2 的倍数剔除掉；再用下一个素数，也就是 3 筛，把 3 留下，把 3 的倍数剔除掉；接下去用下一个素数 5 筛，把 5 留下，把 5...","link":"","photos":[],"count_time":{"symbolsCount":705,"symbolsTime":"1 mins."},"categories":[{"name":"技术","slug":"技术","count":2,"path":"api/categories/技术.json"}],"tags":[{"name":"技术","slug":"技术","count":2,"path":"api/tags/技术.json"},{"name":"算法","slug":"算法","count":1,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95\"><span class=\"toc-text\">埃拉托斯特尼筛法</span></a></li></ol>","author":{"name":"苗大","slug":"苗大","avatar":"https://cdn.jsdelivr.net/gh/WitMiao/blogAssets/img/custom/avatar.jpg","link":"https://miaoda.fun","description":"我不是天生的王者，但我骨子里流动着不让我低头的血液!","socials":{"github":"https://github.com/WitMiao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"如何在GitHub上搭建博客","uid":"9556a58560205ef1e1d3ffec3d268cbc","slug":"如何在GitHub上搭建博客","date":"2022-08-14T10:00:00.000Z","updated":"2022-08-16T06:45:33.700Z","comments":true,"path":"api/articles/如何在GitHub上搭建博客.json","keywords":null,"cover":[],"text":"如何在GitHub上搭建博客一、前言 本次分享准备向大家介绍如何免费且快速的搭建一个属于自己的静态博客，选择Hexo框架搭建，演示主题选择的是Aurora 1. 为什么要搭建博客对于个人网站来说，没有比博客更合适的形式了。在博客中，文章才是最主要的，一切都显得主次分明，干净利落。...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"技术","slug":"技术","count":2,"path":"api/categories/技术.json"}],"tags":[{"name":"技术","slug":"技术","count":2,"path":"api/tags/技术.json"}],"author":{"name":"苗大","slug":"苗大","avatar":"https://cdn.jsdelivr.net/gh/WitMiao/blogAssets/img/custom/avatar.jpg","link":"https://miaoda.fun","description":"我不是天生的王者，但我骨子里流动着不让我低头的血液!","socials":{"github":"https://github.com/WitMiao","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{}}