[{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new \"My New Post\"\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2022-08-14T12:43:31.779Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"35812bef2e366533a5768bf0e35d85d9","title":"获取质数算法：埃拉托斯特尼筛法","content":"埃拉托斯特尼筛法本算法的核心思想是：给出要筛选数值的范围 n，找出 √𝑛 以内的素数 p1, p2…, p𝑘。先用 2 去筛，即把 2 留下，把 2 的倍数剔除掉；再用下一个素数，也就是 3 筛，把 3 留下，把 3 的倍数剔除掉；接下去用下一个素数 5 筛，把 5 留下，把 5 的倍数剔除掉；不断重复下去……\n如下图所示：\n\n下面是本算法的实现代码：\nconst primesList = function(n) &#123;\n    let list = [];\n    let signs = new Uint8Array(n);\n\n    for (let i = 2; i &lt; n; i++) &#123;\n        if (!signs[i - 1]) &#123;\n            list.push(i);\n\n            for (let j = i * i; j &lt;= n; j += i) &#123;\n                signs[j - 1] = true;\n            &#125;\n        &#125;\n    &#125;\n    return list;\n&#125;;\nlet result = primesList(100);\nconsole.log(\"list: \" + result);\nconsole.log(\"count: \" + result.length);\n\n\n时间复杂度：O(n * loglog n)\n\n空间复杂度：O(n)\n\n\n参考资料：\n\n埃拉托斯特尼筛法 — 维基百科\n\n","slug":"获取质数算法：埃拉托斯特尼筛法","date":"2020-08-11T07:00:00.000Z","categories_index":"技术","tags_index":"算法,技术","author_index":"苗大"}]